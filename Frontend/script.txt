-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.asignacion_sillas (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  silla_id uuid UNIQUE,
  reserva_id uuid,
  CONSTRAINT asignacion_sillas_pkey PRIMARY KEY (id),
  CONSTRAINT asignacion_sillas_silla_id_fkey FOREIGN KEY (silla_id) REFERENCES public.sillas(id),
  CONSTRAINT asignacion_sillas_reserva_id_fkey FOREIGN KEY (reserva_id) REFERENCES public.reservas(id)
);
CREATE TABLE public.avion (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  modelo_avion text,
  numero_sillas integer DEFAULT 3 CHECK (numero_sillas > 0),
  CONSTRAINT avion_pkey PRIMARY KEY (id)
);
CREATE TABLE public.pago_usuarios (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  metodo_pago text CHECK (metodo_pago = ANY (ARRAY['Tarjeta Credito'::text, 'PSE'::text, 'Tarjeta Debito'::text])),
  fecha_pago timestamp without time zone,
  valor_pago numeric,
  estado_pago text DEFAULT 'Pendiente'::text CHECK (estado_pago = ANY (ARRAY['Pendiente'::text, 'Exitoso'::text, 'Cancelado'::text])),
  reserva_id uuid,
  CONSTRAINT pago_usuarios_pkey PRIMARY KEY (id),
  CONSTRAINT pago_usuarios_reserva_id_fkey FOREIGN KEY (reserva_id) REFERENCES public.reservas(id)
);
CREATE TABLE public.reservas (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  fecha_reserva date DEFAULT CURRENT_DATE,
  estado_reserva text DEFAULT 'Disponible'::text CHECK (estado_reserva = ANY (ARRAY['Disponible'::text, 'Aplazado'::text, 'No Disponible'::text])),
  codigo_reserva character varying UNIQUE,
  vuelo_id uuid,
  usuario_id uuid,
  aceptar_terminos boolean NOT NULL DEFAULT false,
  url_pdf text,
  num_pasajeros integer DEFAULT 1 CHECK (num_pasajeros >= 1 AND num_pasajeros <= 5),
  CONSTRAINT reservas_pkey PRIMARY KEY (id),
  CONSTRAINT reservas_vuelo_id_fkey FOREIGN KEY (vuelo_id) REFERENCES public.vuelos(id),
  CONSTRAINT reservas_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.usuarios(id)
);
CREATE TABLE public.sillas (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  codigo_silla character varying,
  letra_silla text,
  avion_id uuid,
  CONSTRAINT sillas_pkey PRIMARY KEY (id),
  CONSTRAINT sillas_avion_id_fkey FOREIGN KEY (avion_id) REFERENCES public.avion(id)
);
CREATE TABLE public.usuarios (
  id uuid NOT NULL,
  primerapellido text NOT NULL,
  segundoapellido text NOT NULL,
  nombres text NOT NULL,
  fecha_nacimiento date,
  genero text CHECK (genero = ANY (ARRAY['Masculino'::text, 'Femenino'::text])),
  documento text,
  tipo_documento text CHECK (tipo_documento = ANY (ARRAY['Cedula ciudadania'::text, 'Tarjeta Identidad'::text, 'Cedula extranjera'::text])),
  telefono text,
  rol text DEFAULT 'pasajeros'::text CHECK (rol = ANY (ARRAY['administrador'::text, 'pasajeros'::text])),
  CONSTRAINT usuarios_pkey PRIMARY KEY (id),
  CONSTRAINT usuarios_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.vuelos (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  precio_vuelo integer,
  fecha_salida date,
  fecha_llegada date,
  hora_salida timestamp without time zone,
  hora_llegada timestamp without time zone,
  numero_vuelo character varying UNIQUE,
  origen text,
  destino text,
  avion_id uuid,
  CONSTRAINT vuelos_pkey PRIMARY KEY (id),
  CONSTRAINT vuelos_avion_id_fkey FOREIGN KEY (avion_id) REFERENCES public.avion(id)
);

